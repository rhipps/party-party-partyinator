{"version":3,"sources":["stolen-party-stuff/greyscale.js","stolen-party-stuff/party.js","util/HackyFileShit.js","components/Partyifier.js","components/Uploadinator.js","App.js","serviceWorker.js","index.js"],"names":["toGreyscale","pixels","greyscale","i","data","length","idx","push","avg","colours","rotate","x","y","frac","shape","centerX","centerY","xRelCenter","yRelCenter","cos","Math","PI","sin","round","createPartyImage","inputFile","outputStream","processImage","a","async","err","console","log","gif","gifEncoder","getPixelValue","arr","pipe","setDelay","speed","setRepeat","setTransparent","writeHeader","on","read","forEach","c","colourIndex","rotX","rotY","offset","partyOffset","p","rotationSpeed","g","addFrame","flushData","finish","partyRadius","Promise","resolve","reader","FileReader","onloadend","buffer","Buffer","from","result","getPixels","type","readAsArrayBuffer","fileToImgTag","file","size","src","URL","createObjectURL","width","height","alt","jamBitsIntoGifFile","bits","file_name","File","partifiedBytes","Uint8Array","doTheHackyWritingBytesManuallyThing","someBytes","buf1","buf2","tmp","byteLength","set","appendBuffers","theMagic","input","hackyStream","Stream","Writable","write","path","replace","StyledPartyJammingSpace","styled","div","isMobile","StyledPartyOverlay","join","props","isPartying","StyledDoItButton","button","StyledDownloadButton","Partyifier","maybePartyFile","useState","fileToParty","setFileToParty","partyFile","setPartyFile","gettingReadyToParty","setGettingReadyToParty","partyToDisplay","doItButton","downloadButton","onClick","image","partyMagic","setTimeout","doTheThing","then","_","disabled","document","createElement","href","download","name","body","appendChild","click","removeChild","Container","StyledUploadIcon","Upload","attrs","StyledBrowserView","BrowserView","Uploadinator","jamImageOnPage","onDrop","useCallback","files","imageToParty","useDropzone","accept","maxSize","multiple","getRootProps","getInputProps","isDragActive","StyledAppWrapper","StyledColumnWrapper","App","theParty","setTheParty","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f2a55ae0.chunk.js","sourcesContent":["export function toGreyscale(pixels) {\n  const greyscale = [];\n\n  for (var i = 0; i < pixels.data.length / 4; i += 1) {\n    const idx = i * 4;\n    if (pixels.data[idx + 3] < 64) {\n      greyscale.push(-1);\n    } else {\n      const avg =\n        (pixels.data[idx] +\n          pixels.data[idx + 1] +\n          pixels.data[idx + 2]) /\n        3;\n      greyscale.push(avg);\n    }\n  }\n  return greyscale;\n}\n","import getPixels from 'get-pixels'\nimport gifEncoder from 'gif-encoder'\nimport { toGreyscale } from './greyscale'\n\n// The party palette. Party on, Sirocco!\nexport const colours = [\n  [255, 141, 139],\n  [254, 214, 137],\n  [136, 255, 137],\n  [135, 255, 255],\n  [139, 181, 254],\n  [215, 140, 255],\n  [255, 140, 255],\n  [255, 104, 247],\n  [254, 108, 183],\n  [255, 105, 104]\n];\n\n/**\n * Rotates the point [x, y] frac of a rotation around the center of the image.\n *\n * @param {number} x The starting x coordinate.\n * @param {number} y The starting y coordinate.\n * @param {number} frac The fraction of a rotation by which to rotate (that is,\n *     we rotate by frac * 2pi radians).\n * @param {Array} shape An array of length 2 containing the dimensions of the image.\n */\nfunction rotate(x, y, frac, shape) {\n  const centerX = shape[0] / 2;\n  const centerY = shape[1] / 2;\n  const xRelCenter = x - centerX\n  const yRelCenter = y - centerY\n  const cos = Math.cos(2 * Math.PI * frac);\n  const sin = Math.sin(2 * Math.PI * frac);\n  return [\n    Math.round(centerX + xRelCenter * cos - yRelCenter * sin),\n    Math.round(centerY + yRelCenter * cos + xRelCenter * sin),\n  ];\n}\n\n/**\n * Writes a party version of the given input image to the specified output stream.\n * @param {string} inputFile the thing to be partyified\n * @param {stream.Writable} outputStream The stream where the partified image is to be written\n * @param {number} partyRadius The radius used to animate movement in the output image\n * @param {number} rotationSpeed The speed of rotation in the output image (if desired)\n */\nexport async function createPartyImage(inputFile, outputStream, speed = 100, partyRadius = 0, rotationSpeed = 0) {\n  //TODO(somewhatabstract): Add other variations to radius, like tilt (for bobbling side to side)\n  const partyOffset = [];\n  colours.forEach((c, colourIndex) => {\n    const x =\n      partyRadius * Math.sin(2 * Math.PI * (-colourIndex / colours.length));\n    const y =\n      partyRadius * Math.cos(2 * Math.PI * (-colourIndex / colours.length));\n    partyOffset.push([Math.round(x), Math.round(y)]);\n  });\n\n  function processImage(err, pixels) {\n    if (err) {\n      console.log(\"Invalid image path..\");\n      console.log(err);\n      return;\n    }\n\n    const { shape } = pixels;\n    const greyscale = toGreyscale(pixels);\n\n    const gif = new gifEncoder(shape[0], shape[1]);\n    gif.pipe(outputStream);\n\n    gif.setDelay(speed);\n    gif.setRepeat(0);\n    gif.setTransparent(\"0x00FF00\");\n    gif.writeHeader();\n    gif.on(\"readable\", function() {\n      gif.read();\n    });\n\n    function getPixelValue(arr, shape, x, y) {\n      if (x < 0 || x >= shape[0] || y < 0 || y >= shape[1]) {\n        return -1;\n      }\n      return arr[x + y * shape[0]];\n    }\n\n    colours.forEach(function(c, colourIndex) {\n      const offset = partyOffset[colourIndex];\n      const p = [];\n      let rotX, rotY;\n\n      for (let y = 0; y < shape[1]; y += 1) {\n        for (let x = 0; x < shape[0]; x += 1) {\n          if (rotationSpeed) {\n            [rotX, rotY] = rotate(\n              x, y, rotationSpeed * colourIndex / colours.length, shape);\n          } else {\n            [rotX, rotY] = [x, y];\n          }\n          let g = getPixelValue(\n            greyscale,\n            shape,\n            rotX + offset[0],\n            rotY + offset[1]\n          );\n\n          if (g === -1) {\n            p.push(0);\n            p.push(255);\n            p.push(0);\n            p.push(0);\n          } else {\n            g = g < 32 ? 32 : g;\n\n            p.push(g * c[0] / 255);\n            p.push(g * c[1] / 255);\n            p.push(g * c[2] / 255);\n            p.push(255);\n          }\n        }\n      }\n\n      gif.addFrame(p);\n      gif.flushData();\n    });\n\n    gif.finish();\n  }\n\n  return new Promise(resolve => {\n    const reader = new FileReader()\n    reader.onloadend = () => {\n      let buffer = Buffer.from(reader.result)\n\n      getPixels(buffer, inputFile.type, (err, pixels) => {\n        processImage(err, pixels)\n        console.log('done')\n        resolve()\n      })\n    }\n    reader.readAsArrayBuffer(inputFile)\n  })\n}\n","import React from 'react'\nimport Stream from 'stream-browserify'\nimport {createPartyImage} from '../stolen-party-stuff/party'\n\nexport const fileToImgTag = (file, size) => {\n  return <img src={URL.createObjectURL(file)} width={size} height={size} alt='just do the thing already'/>\n}\n\nconst jamBitsIntoGifFile = (bits, file_name) => {\n  return new File([bits], `${file_name}.gif`, {type: 'image/gif'})\n}\n\nconst appendBuffers = (buf1, buf2) => {\n  let tmp = new Uint8Array(buf1.byteLength + buf2.byteLength)\n  tmp.set(new Uint8Array(buf1), 0)\n  tmp.set(new Uint8Array(buf2), buf1.byteLength)\n  return tmp.buffer\n}\n\nlet partifiedBytes = new Uint8Array(0)\nconst doTheHackyWritingBytesManuallyThing = someBytes => {\n  partifiedBytes = appendBuffers(partifiedBytes, someBytes)\n}\n\nexport const theMagic = async input => {\n  partifiedBytes = new Uint8Array(0)\n  let hackyStream = new Stream.Writable()\n  hackyStream.write = doTheHackyWritingBytesManuallyThing\n  await createPartyImage(input, hackyStream)\n  console.log(`partifiedBytes: ${partifiedBytes}`)\n\n  const file_name = input.path.replace(/\\.(png|jpeg)/, '').replace(/^/, 'party-')\n\n  return jamBitsIntoGifFile(partifiedBytes, file_name)\n}","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { fileToImgTag, theMagic } from '../util/HackyFileShit'\nimport { colours } from '../stolen-party-stuff/party'\nimport { isMobile } from 'react-device-detect'\n\nconst StyledPartyJammingSpace = styled.div`\n  height: ${isMobile ? '36vh' : '100px'};\n  width: ${isMobile ? '90vw' : '100px'};\n  background: #ababab;\n  text-justify: auto;\n  text-align: center;\n  padding: ${isMobile ? '2vh' : '20px'};\n  border-radius: 10px;\n  margin-top: ${isMobile ? '5vh' : '80px'};\n`\n\nconst alpha = 0.7\nconst StyledPartyOverlay = styled.div`\n  @keyframes party {\n      0%{ background-color: rgba(${colours[0].join()}, ${alpha}); }\n     11%{ background-color: rgba(${colours[1].join()}, ${alpha}); }\n     22%{ background-color: rgba(${colours[2].join()}, ${alpha}); }\n     33%{ background-color: rgba(${colours[3].join()}, ${alpha}); }\n     44%{ background-color: rgba(${colours[4].join()}, ${alpha}); }\n     55%{ background-color: rgba(${colours[5].join()}, ${alpha}); }\n     66%{ background-color: rgba(${colours[6].join()}, ${alpha}); }\n     77%{ background-color: rgba(${colours[7].join()}, ${alpha}); }\n     88%{ background-color: rgba(${colours[8].join()}, ${alpha}); }\n    100%{ background-color: rgba(${colours[9].join()}, ${alpha}); }\n  }\n  \n  filter: brightness(85%);\n  opacity: ${props => props.isPartying ? '1' : '0'};\n  animation: party 0.8s infinite;\n  transition: opacity 2s ease-out;\n  height: ${isMobile ? '36vh' : '100px'};\n  width: ${isMobile ? '90vw' : '100px'};\n  padding: ${isMobile ? '2vh' : '20px'};\n  border-radius: 10px;\n  margin-top: ${isMobile ? '-40vh' : '-140px'};\n  z-index: 200001;\n`\n\nconst StyledDoItButton = styled.button`\n  margin-top: 10px;\n  width: 100px;\n`\n\nconst StyledDownloadButton = styled.button`\n  width: 100px;\n`\n\nconst doTheThing = async (image, setPartyFile, setGettingReadyToParty, speed = 100) => {\n  if (image !== null) {\n    setGettingReadyToParty(true)\n    const partyMagic = await theMagic(image)\n    return new Promise(resolve => setTimeout(() => { setPartyFile(partyMagic); resolve() }, 3000))\n  }\n}\n\nconst download = file => {\n  let a = document.createElement('a')\n  a.href = URL.createObjectURL(file)\n  a.download = file.name\n  document.body.appendChild(a)\n  a.click()\n  document.body.removeChild(a)\n}\n\nconst Partyifier = ({ maybePartyFile }) => {\n  const [fileToParty, setFileToParty] = useState(null)\n  const [partyFile, setPartyFile] = useState(null)\n  const [gettingReadyToParty, setGettingReadyToParty] = useState(false)\n\n  let partyToDisplay = maybePartyFile\n  let doItButton = null\n  let downloadButton = null\n  if (maybePartyFile instanceof File) {\n    if (maybePartyFile !== fileToParty) {\n      setFileToParty(maybePartyFile)\n      setPartyFile(null)\n    }\n    // for some reason on first render we loop through this code once before the setState call works?? help me @tim.huddle\n    if (fileToParty !== null) {\n      partyToDisplay = fileToImgTag(fileToParty, isMobile ? 300 : 100)\n      doItButton = <StyledDoItButton onClick={() => doTheThing(fileToParty, setPartyFile, setGettingReadyToParty).then(_ => setGettingReadyToParty(false))} disabled={gettingReadyToParty}>{gettingReadyToParty ? 'just chillll' : 'do it'}</StyledDoItButton>\n    }\n  }\n\n  if (partyFile instanceof File) {\n    partyToDisplay = fileToImgTag(partyFile, isMobile ? 300 : 100)\n    doItButton = <StyledDoItButton onClick={() => {setPartyFile(null); setGettingReadyToParty(false)}}>reset</StyledDoItButton>\n    downloadButton = <StyledDownloadButton onClick={() => download(partyFile)}>download</StyledDownloadButton>\n  }\n\n  return (\n    <>\n      {partyToDisplay &&\n        <>\n          <StyledPartyJammingSpace isPartying={gettingReadyToParty}>\n            {partyToDisplay}\n          </StyledPartyJammingSpace>\n          <StyledPartyOverlay isPartying={gettingReadyToParty} />\n          {doItButton}\n          {downloadButton}\n        </>\n      }\n    </>\n  )\n}\n\nexport default Partyifier\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport styled from 'styled-components'\nimport { Upload } from 'styled-icons/feather/Upload'\nimport { BrowserView, isMobile } from 'react-device-detect'\n\nconst Container = styled.div`\n  height: ${isMobile ? '20vh' : '100px'};\n  width: ${isMobile ? '95vw' : '400px'};\n  background: #ababab;\n  text-justify: auto;\n  text-align: center;\n  padding-top: ${isMobile ? '5vh' : '20px'};\n  border-radius: 10px;\n  margin-top: ${isMobile ? '2vh' : '80px'};\n  font-size: ${isMobile ? '24px' : ''};\n`\n\nconst StyledUploadIcon = styled(Upload).attrs(props => ({\n  ...props,\n  size: isMobile ? 72 : 24\n}))`\n  margin-top: 15px;\n`\n\nconst StyledBrowserView = styled(BrowserView)`\n  display: inline;\n`\n\nlet Uploadinator = ({ jamImageOnPage }) => {\n  const onDrop = useCallback(files => {\n    let imageToParty = <p>whoa, I can't party that</p>\n    // using react-dropzone's validation for file type and size means if we get a single file it *should* be partiable\n    if (files.length === 1) {\n      imageToParty = files[0]\n    }\n    jamImageOnPage(imageToParty)\n  }, [jamImageOnPage])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop, accept: 'image/jpeg, image/png', maxSize: 1024000, multiple: false})\n\n  return (\n    <Container {...getRootProps()}>\n      <input {...getInputProps()} />\n      {\n        isDragActive ?\n          <div>Get the party started...</div> :\n          <div><StyledBrowserView>Drag and drop or </StyledBrowserView>click here to get the party started...</div>\n      }\n      <StyledUploadIcon/>\n    </Container>\n  )\n}\n\nexport default Uploadinator\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Partyifier from './components/Partyifier'\nimport Uploadinator from './components/Uploadinator'\nimport { isMobile } from 'react-device-detect'\n\nconst StyledAppWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst StyledColumnWrapper = styled.div`\n  width: ${isMobile ? '100%' : '50%'};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst App = () => {\n  const [theParty, setTheParty] = useState(null)\n\n  const jamImageOnPage = image => { setTheParty(image) }\n\n  return (\n    <StyledAppWrapper>\n      <StyledColumnWrapper>\n        <Uploadinator jamImageOnPage={jamImageOnPage}/>\n        <Partyifier maybePartyFile={theParty}/>\n      </StyledColumnWrapper>\n    </StyledAppWrapper>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}